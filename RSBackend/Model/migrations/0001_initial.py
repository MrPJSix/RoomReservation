# Generated by Django 4.1 on 2023-04-09 05:11

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "building_id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="教学楼编码",
                    ),
                ),
                (
                    "building_name",
                    models.CharField(max_length=25, verbose_name="教学楼名称"),
                ),
            ],
            options={"db_table": "building_info",},
        ),
        migrations.CreateModel(
            name="Campus",
            fields=[
                (
                    "campus_id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="校区编码",
                    ),
                ),
                ("campus_name", models.CharField(max_length=25, verbose_name="校区")),
            ],
            options={"db_table": "campus_info",},
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "room_id",
                    models.AutoField(
                        default=1,
                        primary_key=True,
                        serialize=False,
                        verbose_name="自习室ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("1", "教室自习室"), ("2", "图书馆自习室"), ("3", "其他区域自习室")],
                        default="1",
                        max_length=1,
                        verbose_name="类型",
                    ),
                ),
                ("room_name", models.CharField(max_length=25, verbose_name="名称")),
                ("number_of_seats", models.PositiveIntegerField(verbose_name="座位数量")),
                (
                    "is_available",
                    models.BooleanField(default=True, verbose_name="是否开放"),
                ),
                (
                    "open_time",
                    models.TimeField(default=datetime.time(7, 0), verbose_name="开放时间"),
                ),
                (
                    "close_time",
                    models.TimeField(default=datetime.time(22, 0), verbose_name="关闭时间"),
                ),
                (
                    "is_allnight",
                    models.BooleanField(default=False, verbose_name="是否通宵"),
                ),
                ("have_charge", models.BooleanField(verbose_name="是否有充电设备")),
                (
                    "building",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Model.building",
                        verbose_name="教学楼编码",
                    ),
                ),
            ],
            options={"db_table": "studyroom_info",},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "user_id",
                    models.CharField(
                        max_length=25,
                        primary_key=True,
                        serialize=False,
                        verbose_name="用户账号",
                    ),
                ),
                ("user_name", models.CharField(max_length=25, verbose_name="用户昵称")),
                (
                    "email",
                    models.EmailField(max_length=254, unique=True, verbose_name="邮箱"),
                ),
                (
                    "credits",
                    models.PositiveIntegerField(default=100, verbose_name="信誉值"),
                ),
                (
                    "default_times",
                    models.PositiveIntegerField(default=0, verbose_name="违约次数"),
                ),
                ("is_admin", models.BooleanField(default=False)),
            ],
            options={"db_table": "user_info",},
        ),
        migrations.CreateModel(
            name="Seat",
            fields=[
                (
                    "seat_id",
                    models.AutoField(
                        default=1,
                        primary_key=True,
                        serialize=False,
                        verbose_name="座位ID",
                    ),
                ),
                ("seat_number", models.CharField(max_length=3, verbose_name="座位编号")),
                (
                    "can_charge",
                    models.BooleanField(default=False, verbose_name="是否有充电设备"),
                ),
                ("QR_Code", models.URLField(null=True, verbose_name="二维码链接")),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Model.room",
                        verbose_name="自习室ID",
                    ),
                ),
            ],
            options={
                "db_table": "seat_info",
                "unique_together": {("room_id", "seat_number")},
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "reservation_id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="预约记录ID"
                    ),
                ),
                ("date", models.DateField(auto_now_add=True, verbose_name="预约日期")),
                ("reservation_time", models.TimeField(verbose_name="预约时间")),
                (
                    "reservation_hours",
                    models.DurationField(
                        default=datetime.timedelta(seconds=14400), verbose_name="预约时长"
                    ),
                ),
                (
                    "reservation_status",
                    models.CharField(
                        choices=[
                            ("0", "未生效"),
                            ("1", "已生效"),
                            ("2", "已取消"),
                            ("3", "已违约"),
                            ("4", "已结束"),
                        ],
                        default="0",
                        max_length=1,
                        verbose_name="预约状态",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="Model.room",
                        verbose_name="自习室ID",
                    ),
                ),
                (
                    "seat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="Model.seat",
                        verbose_name="座位ID",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户账号",
                    ),
                ),
            ],
            options={"db_table": "reservation_info",},
        ),
        migrations.AddField(
            model_name="building",
            name="campus",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="Model.campus",
                verbose_name="校区编码",
            ),
        ),
    ]
